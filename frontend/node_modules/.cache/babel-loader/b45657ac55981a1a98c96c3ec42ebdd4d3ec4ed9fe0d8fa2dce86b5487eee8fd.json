{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HITESH BHANUSHALI\\\\OneDrive\\\\Documents\\\\PicSearch\\\\frontend\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport ImageGrid from '../components/ImageGrid';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [allImages, setAllImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchAllImages = async () => {\n      try {\n        const response = await apiService.getAllImages();\n        setAllImages(response.images || []);\n      } catch (err) {\n        setError('Failed to load images');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllImages();\n  }, []);\n  const handleResultsChange = results => {\n    setSearchResults(results);\n    setHasSearched(true);\n  };\n\n  // Determine which images to show\n  const displayImages = hasSearched ? searchResults : allImages;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"page-description\",\n          children: \"Search through your image collection using natural language. The system uses semantic search to find images that match your description.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onResultsChange: handleResultsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: hasSearched ? `Search Results (${searchResults.length})` : `All Images (${allImages.length})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n          images: displayImages,\n          loading: loading,\n          emptyMessage: hasSearched ? \"No images match your search. Try a different query.\" : \"No images found. Upload some images to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"frbpLoYGV0ZUmDPiIE1kFWKPjto=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","ImageGrid","apiService","jsxDEV","_jsxDEV","Search","_s","searchResults","setSearchResults","allImages","setAllImages","loading","setLoading","hasSearched","setHasSearched","error","setError","fetchAllImages","response","getAllImages","images","err","console","handleResultsChange","results","displayImages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onResultsChange","length","emptyMessage","_c","$RefreshReg$"],"sources":["C:/Users/HITESH BHANUSHALI/OneDrive/Documents/PicSearch/frontend/src/pages/Search.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport ImageGrid from '../components/ImageGrid';\r\nimport apiService from '../services/api';\r\n\r\nconst Search = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [allImages, setAllImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const fetchAllImages = async () => {\r\n      try {\r\n        const response = await apiService.getAllImages();\r\n        setAllImages(response.images || []);\r\n      } catch (err) {\r\n        setError('Failed to load images');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchAllImages();\r\n  }, []);\r\n  \r\n  const handleResultsChange = (results) => {\r\n    setSearchResults(results);\r\n    setHasSearched(true);\r\n  };\r\n  \r\n  // Determine which images to show\r\n  const displayImages = hasSearched ? searchResults : allImages;\r\n  \r\n  return (\r\n    <div className=\"search-page\">\r\n      <div className=\"container\">\r\n        <div className=\"page-header\">\r\n          <h1>Search Images</h1>\r\n          <p className=\"page-description\">\r\n            Search through your image collection using natural language. \r\n            The system uses semantic search to find images that match your description.\r\n          </p>\r\n        </div>\r\n        \r\n        <SearchBar onResultsChange={handleResultsChange} />\r\n        \r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        \r\n        <div className=\"search-results\">\r\n          <h2>\r\n            {hasSearched \r\n              ? `Search Results (${searchResults.length})` \r\n              : `All Images (${allImages.length})`}\r\n          </h2>\r\n          \r\n          <ImageGrid \r\n            images={displayImages} \r\n            loading={loading}\r\n            emptyMessage={\r\n              hasSearched \r\n                ? \"No images match your search. Try a different query.\" \r\n                : \"No images found. Upload some images to get started!\"\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}