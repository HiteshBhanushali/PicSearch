{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst apiService = {\n  // Upload images\n  uploadImages: async imageFiles => {\n    const formData = new FormData();\n    imageFiles.forEach(file => {\n      formData.append('images', file);\n    });\n    try {\n      const response = await axios.post(`${API_URL}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error uploading images:', error);\n      throw error;\n    }\n  },\n  // Search images\n  searchImages: async query => {\n    try {\n      const response = await axios.get(`${API_URL}/search`, {\n        params: {\n          query\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error searching images:', error);\n      throw error;\n    }\n  },\n  // Get all images\n  getAllImages: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/all_images`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching all images:', error);\n      throw error;\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","apiService","uploadImages","imageFiles","formData","FormData","forEach","file","append","response","post","headers","data","error","console","searchImages","query","get","params","getAllImages"],"sources":["C:/Users/HITESH BHANUSHALI/OneDrive/Documents/PicSearch/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst apiService = {\r\n  // Upload images\r\n  uploadImages: async (imageFiles) => {\r\n    const formData = new FormData();\r\n    \r\n    imageFiles.forEach(file => {\r\n      formData.append('images', file);\r\n    });\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_URL}/upload`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Search images\r\n  searchImages: async (query) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/search`, {\r\n        params: { query }\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error searching images:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get all images\r\n  getAllImages: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/all_images`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching all images:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,UAAU,GAAG;EACjB;EACAC,YAAY,EAAE,MAAOC,UAAU,IAAK;IAClC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAE/BF,UAAU,CAACG,OAAO,CAACC,IAAI,IAAI;MACzBH,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,SAAS,EAAEO,QAAQ,EAAE;QAC/DO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,OAAOF,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,YAAY,EAAE,MAAOC,KAAK,IAAK;IAC7B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMb,KAAK,CAACqB,GAAG,CAAC,GAAGpB,OAAO,SAAS,EAAE;QACpDqB,MAAM,EAAE;UAAEF;QAAM;MAClB,CAAC,CAAC;MAEF,OAAOP,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAM,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMb,KAAK,CAACqB,GAAG,CAAC,GAAGpB,OAAO,aAAa,CAAC;MACzD,OAAOY,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeZ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}